$date
  Fri Dec 17 00:32:24 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module control_unit $end
$var reg 7 ! op[6:0] $end
$var reg 3 " funct3[14:12] $end
$var reg 1 # funct7_5 $end
$var reg 1 $ regwrite_d $end
$var reg 2 % resultsrc_d[1:0] $end
$var reg 1 & memwrite_d $end
$var reg 1 ' jump_d $end
$var reg 1 ( branch_d $end
$var reg 3 ) alucontrol_d[2:0] $end
$var reg 2 * alusrc_d[1:0] $end
$var reg 2 + immsrc_d[1:0] $end
$var reg 2 , aluop[1:0] $end
$scope module inst_maindecoder $end
$var reg 7 - op[6:0] $end
$var reg 1 . branch $end
$var reg 1 / jump $end
$var reg 1 0 memwrite $end
$var reg 2 1 alusrc[1:0] $end
$var reg 2 2 immsrc[1:0] $end
$var reg 1 3 regwrite $end
$var reg 2 4 aluop[1:0] $end
$var reg 2 5 resultsrc[1:0] $end
$var reg 12 6 controls[11:0] $end
$upscope $end
$scope module inst_aludecoder $end
$var reg 1 7 op5 $end
$var reg 3 8 funct3[2:0] $end
$var reg 1 9 funct7_5 $end
$var reg 2 : aluop[1:0] $end
$var reg 3 ; alucontrol[2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0010010 !
b110 "
0#
-$
b-- %
-&
-'
-(
b011 )
b-- *
b-- +
b-- ,
b0010010 -
-.
-/
-0
b-- 1
b-- 2
-3
b-- 4
b-- 5
b------------ 6
07
b110 8
09
b-- :
b011 ;
#5000000
b1011000 !
b101 "
1#
b100 )
b1011000 -
b101 8
19
b100 ;
#10000000
b0100001 !
b000 "
b001 )
b0100001 -
17
b000 8
b001 ;
#15000000
b0011101 !
b100 "
0#
b110 )
b0011101 -
07
b100 8
09
b110 ;
#20000000
b0110000 !
1#
b0110000 -
17
19
#25000000
b0110100 !
b110 "
0#
b011 )
b0110100 -
b110 8
09
b011 ;
#30000000
b1000100 !
b111 "
b010 )
b1000100 -
07
b111 8
b010 ;
#35000000
b0101011 !
b0101011 -
17
#40000000
b1000111 !
b000 "
b000 )
b1000111 -
07
b000 8
b000 ;
#45000000
b0110000 !
b001 "
1#
b111 )
b0110000 -
17
b001 8
19
b111 ;
#50000000
b1111010 !
b010 "
b101 )
b1111010 -
b010 8
b101 ;
#55000000
b0111111 !
b101 "
b100 )
b0111111 -
b101 8
b100 ;
#60000000
b0001011 !
b100 "
b110 )
b0001011 -
07
b100 8
b110 ;
#65000000
b0010101 !
b110 "
0#
b011 )
b0010101 -
b110 8
09
b011 ;
#70000000
b0011100 !
b000 "
1#
b000 )
b0011100 -
b000 8
19
b000 ;
#75000000
b1011011 !
b010 "
b101 )
b1011011 -
b010 8
b101 ;
#80000000
b1001101 !
b011 "
0#
b--- )
b1001101 -
b011 8
09
b--- ;
#85000000
b0110011 !
b101 "
1$
b00 %
0&
0'
0(
b100 )
b00 *
b10 ,
b0110011 -
0.
0/
00
b00 1
13
b10 4
b00 5
b1--000000100 6
17
b101 8
b10 :
b100 ;
#90000000
b1100011 !
0$
b-- %
1(
b001 )
b10 +
b01 ,
b1100011 -
1.
b10 2
03
b01 4
b-- 5
b010000--1010 6
b01 :
b001 ;
#95000000
b1000000 !
b011 "
1#
-$
-&
-'
-(
b--- )
b-- *
b-- +
b-- ,
b1000000 -
-.
-/
-0
b-- 1
b-- 2
-3
b-- 4
b------------ 6
07
b011 8
19
b-- :
b--- ;
#100000000
b1001101 !
b110 "
b011 )
b1001101 -
b110 8
b011 ;
#105000000
b1000001 !
b000 "
b000 )
b1000001 -
b000 8
b000 ;
#110000000
b1110010 !
b011 "
b--- )
b1110010 -
17
b011 8
b--- ;
#115000000
b1110001 !
b101 "
b100 )
b1110001 -
b101 8
b100 ;
#120000000
b0111001 !
b010 "
0#
b101 )
b0111001 -
b010 8
09
b101 ;
#125000000
b0101100 !
b001 "
b111 )
b0101100 -
b001 8
b111 ;
#130000000
b1110010 !
b010 "
1#
b101 )
b1110010 -
b010 8
19
b101 ;
#135000000
b1101010 !
b100 "
b110 )
b1101010 -
b100 8
b110 ;
#140000000
b1101110 !
b110 "
b011 )
b1101110 -
b110 8
b011 ;
#145000000
b0101111 !
b011 "
0#
b--- )
b0101111 -
b011 8
09
b--- ;
#150000000
